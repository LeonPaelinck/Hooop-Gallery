@using System.Security.Claims
@using Project3H04.Shared.Order
@inject HttpClient httpClient
<h3>Orders</h3>
        @if (bestellingen == null)
        {
                        <p>loading...</p>
        }
        else
        {
        @if (bestellingen.Count == 0)
        {
            <p>you don't have any orders yet</p>
        }

                else
                {
            @if (!showKunstwerken)
            {
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th scope="col">OrderNo.</th>
                                    <th scope="col">Date</th>
                                    <th scope="col">Address</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">number of items</th>
                                    <th scope="col">Details</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (Bestelling_DTO.Index b in bestellingen)
                                {
                                <tr>
                                    <td scope="row">@b.Id</td>
                                    <td>@b.Datum</td>
                                    <td>@(b.Straat + " " + b.Postcode + " " + b.Gemeente)</td>
                                    <td>@b.TotalePrijs</td>
                                    <td>@b.WinkelmandKunstwerken.Count</td>
                                    <td><button @onclick="() => ShowArtworks(b.Id)" id="search-button" style="width:50px;height: 50px;">
    
                                            <svg id="search-icon" style=" width: 25px; height: 25px;" viewBox="0 0 512 512" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="circle-info" class="svg-inline--fa fa-circle-info" role="img" xmlns="http://www.w3.org/2000/svg" ><path fill="currentColor" d="M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256s256-114.6 256-256S397.4 0 256 0zM256 128c17.67 0 32 14.33 32 32c0 17.67-14.33 32-32 32S224 177.7 224 160C224 142.3 238.3 128 256 128zM296 384h-80C202.8 384 192 373.3 192 360s10.75-24 24-24h16v-64H224c-13.25 0-24-10.75-24-24S210.8 224 224 224h32c13.25 0 24 10.75 24 24v88h16c13.25 0 24 10.75 24 24S309.3 384 296 384z"></path></svg>
                                                     </button>
                                    </td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                    else
                    {
                        foreach(Kunstwerk_DTO.Detail k in kunstwerken)
                        {
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th scope="col">Name</th>
                                            <th scope="col">Price</th>
                                            <th scope="col">Picture</th>
                                            <th scope="col">Return to overview</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td scope="col">@k.Naam</td>
                                            <td>@k.Prijs</td>
                                            <td><img src="@k.HoofdFoto.Pad" style="width:100px" /></td>
                                            <td>
                                                <button @onclick="() => showKunstwerken = false" id="cancel_button" style="width: 50px;height: 50px;"><svg id="cancel_icon" style="width: 25px; height: 25px;" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="arrow-left" class="svg-inline--fa fa-arrow-left" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path fill="currentColor" d="M447.1 256C447.1 273.7 433.7 288 416 288H109.3l105.4 105.4c12.5 12.5 12.5 32.75 0 45.25C208.4 444.9 200.2 448 192 448s-16.38-3.125-22.62-9.375l-160-160c-12.5-12.5-12.5-32.75 0-45.25l160-160c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25L109.3 224H416C433.7 224 447.1 238.3 447.1 256z"></path></svg></button></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
            }

    }



@code {
    // [Parameter] public Bestelling_DTO.Index Kunstwerk { get; set; }
    private List<Bestelling_DTO.Index> bestellingen;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private ClaimsPrincipal user;
    private List<Kunstwerk_DTO.Detail> kunstwerken = null;
    private bool showKunstwerken = false;

    protected override async Task OnInitializedAsync()
    {
        user = (await authenticationStateTask).User;
        var best = await httpClient.GetFromJsonAsync<IEnumerable<Bestelling_DTO.Index>>($"api/Order/myOrders/{user.Identity.Name}");
        bestellingen = best.ToList();
    }

    private void ShowArtworks(int id)
    {
        kunstwerken = bestellingen.FirstOrDefault(b => b.Id == id).WinkelmandKunstwerken.ToList();
        showKunstwerken = true;
    }
}
